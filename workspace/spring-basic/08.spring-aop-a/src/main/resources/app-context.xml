<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						https://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop 
						https://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="testA" class="com.example.spring.aop.TestA" />
	<bean id="testB" class="com.example.spring.aop.TestB" />
	
	<bean id="logger" class="com.example.spring.aop.Logger" />
	
	<aop:config>
		
		<aop:pointcut expression="execution(* *..*.*(..))" id="pointcutAll" />
		<aop:pointcut expression="execution(* com.example..*.*1(..))" id="pointcut1" />
		
		<aop:aspect ref="logger">
		
			<aop:pointcut expression="bean(testA)" id="pointcutA" />
			<aop:pointcut expression="within(com.example.spring.aop.*B)" id="pointcutB" />
			
			<!-- 	
			<aop:before method="logBefore" pointcut-ref="pointcutAll" />
			<aop:after method="logAfter"  pointcut-ref="pointcutAll" />			
			<aop:around method="logAround"  pointcut-ref="pointcutAll" />
			-->
			
			<aop:before method="logBefore" pointcut-ref="pointcutA" />
			<aop:after method="logAfter" pointcut-ref="pointcutB" />
			<aop:around method="logAround" pointcut-ref="pointcut1" />
			
		</aop:aspect>
		
	
	</aop:config>
	
	
	

</beans>










